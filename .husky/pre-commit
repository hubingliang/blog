# Process new and modified markdown files
git diff --cached --name-status |
grep -i '^[AM].*\.md$' |
while read status file; do
  filecontent=$(cat "$file")
  frontmatter=$(echo "$filecontent" | awk -v RS='---' 'NR==2{print}')
  draft=$(echo "$frontmatter" | awk '/^draft: /{print $2}')
  
  # Handle new files (A status)
  if [ "$status" = "A" ]; then
    # Check if pubDatetime is missing and add it
    if ! grep -q "^pubDatetime:" "$file"; then
      # Add pubDatetime after author line
      cat "$file" | sed "/---.*/,/---.*/s/^\(author:.*\)$/\1\npubDatetime: $(date -u "+%Y-%m-%dT%H:%M:%SZ")/" > tmp
      mv tmp "$file"
      git add "$file"
      echo "$file pubDatetime added"
    fi
  fi
  
  # Handle modified files (M status)
  if [ "$status" = "M" ]; then
    if [ "$draft" = "false" ]; then
      # 检查文件中是否已存在 modDatetime 字段
      if grep -q "^modDatetime:" "$file"; then
        # 更新现有的 modDatetime
        cat "$file" | sed "/---.*/,/---.*/s/^modDatetime:.*$/modDatetime: $(date -u "+%Y-%m-%dT%H:%M:%SZ")/" > tmp
        mv tmp "$file"
        git add "$file"
        echo "$file modDateTime updated"
      else
        # 在 frontmatter 中添加新的 modDatetime 字段
        # 在 pubDatetime 行之后插入 modDatetime
        cat "$file" | sed "/---.*/,/---.*/s/^\(pubDatetime:.*\)$/\1\nmodDatetime: $(date -u "+%Y-%m-%dT%H:%M:%SZ")/" > tmp
        mv tmp "$file"
        git add "$file"
        echo "$file modDateTime added"
      fi
    fi
    if [ "$draft" = "first" ]; then
      echo "First release of $file, draft set to false and modDateTime removed"
      cat "$file" | sed "/---.*/,/---.*/s/^modDatetime:.*$/modDatetime:/" | sed "/---.*/,/---.*/s/^draft:.*$/draft: false/" > tmp
      mv tmp "$file"
      git add "$file"
    fi
  fi
done